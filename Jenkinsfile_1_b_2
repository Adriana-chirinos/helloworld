pipeline {
    agent none

    stages {
        stage('Get Code and Static') {
            agent { label 'Jenkins_b_1' }
            stages {
                stage('Get Code') {
                    steps {
                        echo 'Agent Jenkins_b_1:'
                        bat 'whoami'
                        bat 'hostname'
                        git branch: 'develop', url: 'https://github.com/Adriana-chirinos/helloworld.git'
                    }
                }
                stage('Static') {
                    steps {
                        echo 'Agent Jenkins_b_1:'
                        bat 'whoami'
                        bat 'hostname'
                        bat '''
                            flake8 --max-line-length=100 --exit-zero --format=pylint app > flake8.out 
                        '''
                        stash includes: 'flake8.out', name: 'static-artifacts'
                        recordIssues tools: [flake8(name: 'Flake8', pattern: 'flake8.out')], qualityGates: [[threshold: 8, type: 'TOTAL', unstable: true], [threshold: 10, type: 'TOTAL', unstable: false]]
                    }
                }
            }
        }
        stage('Security and Service Startup') {
            parallel {
                stage('Security') {
                    agent { label 'Jenkins_b_2' }
                    steps {
                        echo 'Agent Jenkins_b_2:'
                        bat 'whoami'
                        bat 'hostname'
                        unstash 'static-artifacts'
                        bat '''
                            bandit --exit-zero -r . -f custom -o bandit.out --severity-level medium --msg-template "{abspath}: [{test_id} {msg}"
                        '''
                        stash includes: 'bandit.out', name: 'security-artifacts'
                        recordIssues tools: [pyLint(name: 'Bandit', pattern: 'bandit.out')], qualityGates: [[threshold: 1, type: 'TOTAL', unstable: true], [threshold: 2, type: 'TOTAL', unstable: false]]
                    }
                }

                stage('Start Services') {
                    agent { label 'Jenkins_b_2' }
                    steps {
                        echo 'Agent Jenkins_b_2:'
                        bat 'whoami'
                        bat 'hostname'
                        bat '''
                            set FLASK_APP=app\\api.py
                            start flask run
                            start java -jar C:\\Unir\\ejercicios\\wiremock\\wiremock-standalone-3.5.4.jar --port 9090 --root-dir test\\wiremock
                        '''
                        // Pausa mientras se levantan los servicios
                        sleep(time: 5, unit: 'SECONDS')
                    }
                }
            }
        }


        stage('Coverage, Test and Performance') {
            agent { label 'Jenkins_b_3' }
            stages {
                stage('Coverage') {
                    steps {
                        echo 'Agent Jenkins_b_3:'
                        bat 'whoami'
                        bat 'hostname'
                        unstash 'static-artifacts'
                        unstash 'security-artifacts'
                        catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                            cobertura coberturaReportFile: 'coverage.xml', onlyStable: false, failUnstable: false, conditionalCoverageTargets: '100,90,80', lineCoverageTargets: '100,95,85'
                        }
                    }
                }

                stage('Parallel Tests and Performance') {
                    parallel {
                        stage('Test') {
                            steps {
                                echo 'Agent Jenkins_b_3:'
                                bat 'whoami'
                                bat 'hostname'
                                // Unidad
                                catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                                    bat '''
                                        pip install pytest pytest-cov
                                        SET PYTHONPATH=%WORKSPACE%
                                        pytest --junitxml=result-unit.xml --cov=app --cov-report=xml:coverage.xml test/unit
                                    '''
                                }
                                // Rest
                                catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                                    bat '''
                                        set PYTHONPATH=%WORKSPACE%
                                        pytest --junitxml=result-rest.xml test/rest
                                    '''
                                }
                            }
                        }

                        stage('Performance') {
                            steps {
                                echo 'Agent Jenkins_b_3:'
                                bat 'whoami'
                                bat 'hostname'
                                bat 'C:\\apache-jmeter-5.6.3\\bin\\jmeter -n -t test\\jmeter\\flask.jmx -f -l flask.jtl'
                                perfReport sourceDataFiles: 'flask.jtl'
                            }
                        }
                    }
                }
            }
        }
    }
}
